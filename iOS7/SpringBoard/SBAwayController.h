/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "SBLockScreenViewControllerBase.h"

#import "SBSlidingAlertDisplayDelegate-Protocol.h"

@class NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSString, PLCameraPageController, SBAlertItem, SBApplication, SBAwayBulletinListController, SBAwayView, SBPasscodeLockDisableAssertion, SBShowcaseController, SBUIController, UIImageView, UIView, _UIDynamicValueAnimation;

@interface SBAwayController : SBLockScreenViewControllerBase <SBSlidingAlertDisplayDelegate>
{
    SBUIController *_uiController;
    SBShowcaseController *_showcaseController;
    SBAwayView *_awayView;
    unsigned int _isActive:1;
    unsigned int _isDimmed:1;
    unsigned int _isDimming:1;
    unsigned int _orderedOutDimmed:1;
    unsigned int _frontDimmed:1;
    unsigned int _makingEmergencyCall:1;
    unsigned int _showOverheatUI:1;
    unsigned int _performingAutoUnlock:1;
    unsigned int _validPhotoCountCheck:1;
    unsigned int _showcaseAnimating:1;
    unsigned int _animatingDeactivation:1;
    NSDictionary *_nowPlayingInfo;
    SBApplication *_nowPlayingApp;
    id <SBDeviceLockViewOwner> _deviceUnlockDisplay;
    BOOL _chargingViewHasFadedOut;
    NSMutableArray *_pendingAlertItems;
    NSMutableArray *_pendingSuperModalAlertItems;
    SBAlertItem *_currentAlertItem;
    SBAwayBulletinListController *_savedBulletinController;
    NSMutableDictionary *_awayViewPluginControllers;
    NSString *_alwaysFullscreenAwayPluginName;
    NSMutableArray *_lockScreenBundlesToDisableAfterUnlock;
    BOOL _cameraModeActive;
    BOOL _cameraVisible;
    BOOL _animatingCameraIn;
    _UIDynamicValueAnimation *_dynamicCameraAnimation;
    BOOL _cancelCameraAnimation;
    PLCameraPageController *_cameraViewController;
    UIImageView *_cameraDefaultImageView;
    UIView *_cameraBackgroundView;
    UIView *_cameraContainerView;
    UIView *_cameraSlidingContainerView;
    UIView *_cameraFakeStatusBar;
    UIView *_cameraShadowView;
    NSDate *_lastCameraSessionID;
    BOOL _exitedCameraForAlert;
    BOOL _restartCameraAfterCall;
    BOOL _disableGracePeriodForCamera;
    SBPasscodeLockDisableAssertion *_disableGracePeriodForCameraAssertion;
    NSObject<OS_dispatch_queue> *_prewarmQueue;
    id _savedWindowDelegate;
    int _gracePeriodWhenLocked;
    BOOL _keepBulletinsUnreadOnUnlock;
    BOOL _sbFinishedLaunching;
}

+ (void)registerForAlerts;
@property(retain, nonatomic) SBShowcaseController *showcaseController; // @synthesize showcaseController=_showcaseController;
@property(nonatomic) BOOL chargingViewHasFadedOut; // @synthesize chargingViewHasFadedOut=_chargingViewHasFadedOut;
- (void)willAnimateToggleDeviceLockWithStyle:(int)arg1 toVisibility:(BOOL)arg2 withDuration:(double)arg3;
- (void)showcase:(id)arg1 didTransferOwnershipToOwner:(id)arg2;
- (void)assumeShowcaseOwnership:(id)arg1;
- (void)showcaseWantsToBeDismissed:(id)arg1 animated:(BOOL)arg2;
- (void)showcase:(id)arg1 updateRevealMode:(int)arg2 withBlock:(id)arg3;
- (BOOL)presentShowcaseViewController:(id)arg1 revealMode:(int)arg2 completion:(id)arg3;
- (void)_adjustViewHierarchyForShowcase:(id)arg1 revealAmount:(float)arg2;
- (float)showcaseWindowLevel:(id)arg1;
- (void)_sendToDeviceLockOwnerAnimateToEmergencyCall;
- (BOOL)_sendToDeviceLockOwnerShouldUseTransparentStatusBar;
- (BOOL)_sendToDeviceLockOwnerIsDisplayingErrorStatus;
- (void)_sendToDeviceLockOwnerDeviceUnlockFailed;
- (void)_sendToDeviceLockOwnerDeviceUnlockSucceeded;
- (void)_sendToDeviceLockOwnerSetShowingDeviceLock:(BOOL)arg1 animated:(BOOL)arg2;
- (void)_sendToDeviceLockOwnerSetShowingDeviceLock:(BOOL)arg1;
- (void)updateLockSlider;
- (void)stopLockSliderAnimations;
- (void)startLockSliderAnimations;
- (void)updateInterfaceIfNecessary;
- (void)unlockAlwaysFullscreenAwayView;
- (void)enableAlwaysFullscreenAwayPlugin;
- (BOOL)isAlwaysFullscreenAwayPluginEnabled;
- (void)setAlwaysFullscreenAwayPluginName:(id)arg1;
- (BOOL)handleHeadsetButtonPressed:(BOOL)arg1;
- (BOOL)handleVolumeDownButtonPressed;
- (BOOL)handleVolumeUpButtonPressed;
- (BOOL)handleLockButtonPressed;
- (void)handleSlideshowHardwareButton;
- (void)hardwareKeyboardAvailabilityChanged;
- (BOOL)handleMenuButtonHeld;
- (BOOL)handleMenuButtonDoubleTap;
- (BOOL)handleMenuButtonTap;
- (struct CGRect)defaultContentRegionForPluginController:(id)arg1 withOrientation:(int)arg2;
- (BOOL)awayPluginControllerShouldAnimateOthersResumption;
- (void)pluginFullscreenNotification:(id)arg1;
- (void)disablePluginContainerNotification:(id)arg1;
- (void)_awayViewFinishedAnimatingOut:(id)arg1;
- (void)_disablePluginControllersForUnlock;
- (void)_disablePluginControllersForLock;
- (void)pluginVisiblityStateChanged:(id)arg1;
- (void)disableLockScreenBundleWithName:(id)arg1 deactivationContext:(id)arg2;
- (void)disableLockScreenBundleWithName:(id)arg1;
- (void)enableLockScreenBundleWithName:(id)arg1;
- (void)enableLockScreenBundleWithName:(id)arg1 activationContext:(id)arg2;
- (id)nameOfPluginController:(id)arg1;
- (id)interfaceControllingAwayPluginController;
- (id)activeAwayPluginController;
- (id)highestPriorityAwayPluginController;
- (BOOL)isAwayPluginViewVisible;
- (void)toggleShowsIMEIandICCID:(id)arg1;
- (BOOL)toggleMediaControls;
- (void)hideMediaControls;
- (BOOL)isShowingMediaControls;
- (void)_batteryStatusChanged;
- (BOOL)shouldShowInCallUI;
- (void)updateInCallUI:(id)arg1;
- (void)updateCardItem:(id)arg1;
- (void)deactivateCardItem:(id)arg1;
- (void)activateCardItem:(id)arg1 animated:(BOOL)arg2;
- (void)deactivateAlertItem:(id)arg1;
- (BOOL)wantsToHandleAlert:(id)arg1;
- (BOOL)activateAlertItem:(id)arg1;
- (void)noteAlertSheetWasReplaced:(id)arg1 withAlertSheet:(id)arg2;
- (void)pendOrDeactivateCurrentAlertItem;
- (id)currentAlertItem;
- (void)didAnimateLockKeypadOut;
- (void)didAnimateLockKeypadIn;
- (BOOL)isMakingEmergencyCall;
- (void)emergencyCallWasRemoved;
- (void)emergencyCallWasDisplayed;
- (void)makeEmergencyCall;
- (void)handleRequestedAlbumArt:(id)arg1;
- (void)_nowPlayingStateChanged:(id)arg1;
- (void)_nowPlayingAppChanged:(id)arg1;
- (void)updateAwayViewNowPlayingInfo;
- (void)updateNowPlayingInfo:(id)arg1 app:(id)arg2;
- (void)didFinishAnimatingOut;
- (int)statusBarStyleOverridesToCancel;
- (int)statusBarStyle;
- (int)effectiveStatusBarStyle;
- (BOOL)allowsStackingOfAlert:(id)arg1;
- (void)removeFromView;
- (void)deactivate;
- (void)animateDeactivation;
- (void)activate;
- (void)undimScreen:(BOOL)arg1;
- (void)undimScreen;
- (int)interfaceOrientationForActivation;
- (void)dimScreen:(BOOL)arg1;
- (BOOL)handleExternalKeyDownEvent;
- (BOOL)lockScreenBulletinControllerIsActive;
- (id)currentUnlockActionContext;
- (BOOL)lockScreenIsShowingBulletins;
- (void)setShowingOverheatUI:(BOOL)arg1;
- (BOOL)isShowingOverheatUI;
- (void)prepareToEnterLostMode;
- (id)activeLockScreenPluginController;
- (BOOL)isLockScreenPluginViewVisible;
- (BOOL)hasActiveUIAccessories;
- (BOOL)isInScreenOffMode;
- (void)setInScreenOffMode:(BOOL)arg1;
- (void)restartViewRelatedTimers;
- (void)clearViewRelatedTimers;
- (BOOL)isShowingNewBulletin;
- (BOOL)canRelockForAutoDimTimer;
- (BOOL)wantsScreenToAutoDim;
- (id)activationBlockAnimated:(SEL)arg1;
- (void)noteStartingPhoneCallWhileUILocked;
- (void)launchEmergencyDialer;
- (void)finishUIUnlockFromSource:(int)arg1;
- (BOOL)canBeDeactivatedForUIUnlockFromSource:(int)arg1;
- (void)prepareForUIUnlock;
- (BOOL)wantsPasscodeLockForUIUnlockFromSource:(int)arg1 withOptions:(id)arg2;
- (BOOL)isPasscodeLockVisible;
- (void)setPasscodeLockVisible:(BOOL)arg1 animated:(BOOL)arg2 withUnlockSource:(int)arg3 andOptions:(id)arg4;
- (void)setPasscodeLockVisible:(BOOL)arg1 animated:(BOOL)arg2 completion:(id)arg3;
- (void)relock:(id)arg1;
- (void)_prepareToLockUI;
- (void)finishedDimmingScreen;
- (BOOL)isDimmed;
- (BOOL)attemptDeviceUnlockWithPassword:(id)arg1 lockViewOwner:(id)arg2;
- (id)restoreFromSavedBulletinController;
- (BOOL)awayBulletinControllerIsActive;
- (id)activeOrPendingBulletinController;
- (void)cleanupFromPhoneCallIfNeeded;
- (void)prepareToReturnToCameraFromCall;
- (BOOL)shouldReturnToCameraAfterCall;
- (void)cancelReturnToCameraAfterCall;
- (void)noteStartingPhoneCallWhileLocked;
- (void)_finishedUnlockAttemptWithStatus:(BOOL)arg1;
- (BOOL)isLockedAndInactive;
- (BOOL)isLockedAndUndimmed;
- (BOOL)_isAccessoryActive;
- (id)activationBlockWithAnimation:(SEL)arg1;
- (void)printLockLog;
- (BOOL)shouldAnimateOtherDisplaysResumption;
- (BOOL)shouldAnimateOtherDisplaysSuspension;
- (void)frontLockedAnimationFinished;
- (BOOL)willAllowOtherLockBarsToUnlock;
- (void)lockBarStoppedTracking:(id)arg1;
- (void)lockBarStartedTracking:(id)arg1;
- (BOOL)shouldShowSlideshowButton;
- (BOOL)hasPhotosDevicesAttached;
- (BOOL)deviceHasPhotos;
- (void)_photoLibraryChanged;
- (void)_awayInCallControllerDidToggleShowingInCallInfo:(id)arg1;
- (BOOL)shouldShowLockStatusBarTime;
- (void)noteResetRestoreStateChanged:(id)arg1;
- (void)screensaverDidFadeToBlack:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)showTestBulletin;
- (void)_deviceBlockedChanged:(id)arg1;
- (id)allPendingAlertItems;
- (void)_handleDeviceLockStateChangeNotification:(id)arg1;
- (void)_pendAlertItem:(id)arg1;
- (void)setShowOverheatUI:(BOOL)arg1;
- (BOOL)showOverheatUI;
- (void)reactivatePendingAlertItems:(BOOL)arg1;
- (void)reactivatePendingAlertItemsWithBulletinController:(id)arg1 forUnlock:(BOOL)arg2;
- (BOOL)shouldPendAlertItemsWhileActive;
- (void)_reactivateSuperModalAlertsIfNecessary;
- (BOOL)hasSuperModalAlertItems;
- (id)dequeueAllPendingSuperModalAlertItems;
- (void)_releaseAwayView;
- (void)_blockingViewHit:(id)arg1;
- (void)_dismissShowcase;
- (void)_dismissShowcaseImmediately;
- (void)_finishDismissShowcase;
- (BOOL)expectsFaceContact;
- (BOOL)_activateShowcase:(id)arg1 revealMode:(int)arg2;
- (void)takePicture;
- (BOOL)cameraIsInPreviewMode;
- (BOOL)cameraIsVisible;
- (BOOL)cameraIsActive;
- (void)tearDownCameraUIImmediately;
- (void)_restoreWindowOrientationAndDelegate;
- (void)_setCameraAsWindowDelegate;
- (void)dismissCameraAnimated:(BOOL)arg1;
- (void)_tearDownCameraPreview;
- (void)_removeCameraPreviewViews;
- (void)_activateCameraAfterCall;
- (void)activateCamera;
- (void)setDisableGracePeriodForCamera:(BOOL)arg1;
- (void)activateCameraWithNewSessionID:(BOOL)arg1 afterCall:(BOOL)arg2;
- (void)_createCameraViewControllerWithOldSessionID;
- (void)_createCameraViewControllerWithNewSessionID;
- (void)_createCameraViewControllerWithNewSessionID:(BOOL)arg1 andStartPreview:(BOOL)arg2;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)handleCameraTapGesture:(id)arg1;
- (void)handleCameraPanGesture:(id)arg1;
- (void)_handleCameraPanGestureEndedWithVelocity:(float)arg1;
- (id)_newDynamicAnimationForCameraStart:(BOOL)arg1 targetValue:(double)arg2 withInitialVelocity:(double)arg3;
- (void)_translateSlidingViewByY:(float)arg1;
- (void)_setupCameraSlideDownAnimation;
- (void)_cleanupFromCameraPanGesture;
- (void)_cleanupFromCameraPanGestureAndCancelPrewarm:(BOOL)arg1;
- (void)_setupCameraSlideUpAnimation;
- (id)awayViewSnapshot;
- (void)removeAwayViewFakeStatusBar;
- (id)awayViewFakeStatusBar;
- (void)_cancelCameraPrewarm;
- (void)_prewarmCamera;
- (void)alertDisplayWillBecomeVisible;
- (id)alertDisplayViewWithSize:(struct CGSize)arg1;
- (id)awayView;
- (void)loadView;
- (BOOL)undimsDisplay;
- (float)finalAlpha;
- (BOOL)showsSpringBoardStatusBar;
- (id)init;

@end


/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "NSCoding-Protocol.h"

@class GKGameInternal, GKStoreItemInternal, NSDictionary, NSNumber, NSString;

@interface GKGame : NSObject <NSCoding>
{
    GKGameInternal *_internal;
    GKStoreItemInternal *_storeItem;
    BOOL _sandboxed;
}

+ (id)defaultGameIconWithStyle:(int)arg1;
+ (void)loadStoreItemsForGames:(id)arg1 withCompletionHandler:(id)arg2;
+ (struct CGSize)serverImageSizeForIconStyle:(int)arg1;
+ (void)updateGames:(id)arg1 withCompletionHandler:(id)arg2;
+ (id)currentGame;
+ (BOOL)isGameCenter;
+ (void)removeHistoryForGameWithBundleIdentifier:(id)arg1 completionHandler:(id)arg2;
+ (id)lookupMobileInstallation:(id)arg1;
@property(nonatomic, getter=isSandboxed) BOOL sandboxed; // @synthesize sandboxed=_sandboxed;
@property(retain, nonatomic) GKStoreItemInternal *storeItem; // @synthesize storeItem=_storeItem;
@property(retain) GKGameInternal *internal; // @synthesize internal=_internal;
@property(readonly, nonatomic) BOOL nearbyMultiplayerEnabled;
@property(retain, nonatomic) NSNumber *nearbyMultiplayerOverride; // @dynamic nearbyMultiplayerOverride;
- (BOOL)isStoreItemUnexpired;
- (void)getFriendPlayersForAchievement:(id)arg1 handler:(id)arg2;
- (void)getFriendPlayersForLeaderboard:(id)arg1 handler:(id)arg2;
- (void)getFriendPlayersIncludingCompatibleGames:(BOOL)arg1 handler:(id)arg2;
- (void)submitRating:(float)arg1 withCompletionHandler:(id)arg2;
- (void)loadGameRatingWithCompletionHandler:(id)arg1;
- (void)loadStoreItemWithCompletionHandler:(id)arg1;
- (id)loadIconForStyle:(int)arg1 withCompletionHandler:(id)arg2;
- (id)URLStringForImageWithShineIfNeeded;
- (id)cachedIconForStyle:(int)arg1;
- (id)imageSourceForIconStyle:(int)arg1;
- (id)macBrushForIconStyle:(int)arg1;
- (id)imageSourceForiOSIconStyle:(int)arg1;
- (id)_imageURLForIconStyle:(int)arg1;
- (void)updateWithInternal:(id)arg1;
@property(readonly, nonatomic) struct GKGameInfo gameInfo;
@property(readonly, nonatomic) NSString *cacheKey;
@property(readonly, nonatomic) NSDictionary *gameDescriptor;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (unsigned int)hash;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)init;
- (id)initWithBundleID:(id)arg1;
- (id)initWithInternalRepresentation:(id)arg1;
@property(readonly, nonatomic, getter=isDownloading) BOOL downloading;
@property(readonly, nonatomic, getter=isInstalled) BOOL installed;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)loadTellAFriendMessageWithCompletionHandler:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) NSNumber *adamID; // @dynamic adamID;
@property(readonly, nonatomic) NSString *bundleIdentifier; // @dynamic bundleIdentifier;
@property(readonly, nonatomic) NSString *bundleVersion; // @dynamic bundleVersion;
@property(readonly, nonatomic) NSString *defaultCategory; // @dynamic defaultCategory;
@property(readonly, nonatomic) NSNumber *externalVersion; // @dynamic externalVersion;
@property(readonly, nonatomic) NSString *name; // @dynamic name;
@property(nonatomic) unsigned int platform; // @dynamic platform;
@property(nonatomic, getter=isPrerendered) BOOL prerendered; // @dynamic prerendered;

@end


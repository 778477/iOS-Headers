/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "UIView.h"

#import "MKAnnotationManagerDelegate-Protocol.h"
#import "MKAnnotationMarkerContainer-Protocol.h"
#import "MKMapGestureControllerDelegate-Protocol.h"
#import "MKWorldAnnotationManagerDragDelegate-Protocol.h"
#import "MKWorldGestureControllerDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "VKMapViewDelegate-Protocol.h"

@class GEOMapRegion, MKUserLocation, MKWorldViewInternal, NSArray, UITapGestureRecognizer, VKAnnotationMarker, VKLabelMarker, VKMapView, VKTrafficIncident;

@interface MKWorldView : UIView <VKMapViewDelegate, UIGestureRecognizerDelegate, MKAnnotationManagerDelegate, MKAnnotationMarkerContainer, MKWorldAnnotationManagerDragDelegate, MKMapGestureControllerDelegate, MKWorldGestureControllerDelegate>
{
    MKWorldViewInternal *_internal;
    BOOL _fullyDrawn;
}

+ (id)mapRegionWithCenterCoordinate:(CDStruct_c3b9c2ee)arg1 zoomScale:(float)arg2 size:(struct CGSize)arg3;
@property(nonatomic, getter=isFullyDrawn) BOOL fullyDrawn; // @synthesize fullyDrawn=_fullyDrawn;
- (void)puckAnimator:(id)arg1 updatedTargetPosition:(CDStruct_39925896)arg2;
- (void)puckAnimatorDidStop:(id)arg1;
- (void)puckAnimator:(id)arg1 updatedPosition:(CDStruct_39925896)arg2 course:(double)arg3;
- (void)setTracePlaybackSpeedMultiplier:(double)arg1;
- (id)annotationCoordinateTest;
- (id)annotationRectTest;
- (void)setAnnotationDeselectionCallback:(id)arg1;
- (void)deselectAnnotationRepresentation:(id)arg1 animated:(BOOL)arg2;
- (void)selectAnnotationRepresentation:(id)arg1 animated:(BOOL)arg2 avoid:(struct CGRect)arg3;
- (void)removeAnnotationRepresentation:(id)arg1;
- (void)addAnnotationRepresentation:(id)arg1 allowAnimation:(BOOL)arg2;
- (void)annotationManager:(id)arg1 annotationMarker:(id)arg2 didChangeDragState:(int)arg3 fromOldState:(int)arg4;
- (void)annotationManager:(id)arg1 didDeselectAnnotationRepresentation:(id)arg2;
- (void)annotationManager:(id)arg1 didSelectAnnotationRepresentation:(id)arg2;
- (void)annotationManager:(id)arg1 didAddAnnotationRepresentations:(id)arg2;
- (id)annotationManager:(id)arg1 representationForAnnotation:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (BOOL)hitSomethingAtTouch:(id)arg1;
- (void)_handleLongPress:(id)arg1;
- (void)_handleTapToDeselect:(id)arg1;
- (void)_handleTapToSelect:(id)arg1;
- (double)gestureController:(id)arg1 shouldWaitForNextTapForDuration:(double)arg2 afterTouch:(id)arg3;
@property(readonly, nonatomic) VKMapView *mapView;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (BOOL)locationManagerShouldPauseLocationUpdates:(id)arg1;
- (void)locationManagerDidReset:(id)arg1;
- (void)locationManagerUpdatedHeading:(id)arg1;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (void)locationManagerUpdatedLocation:(id)arg1;
- (void)_toggleDebugConsole:(id)arg1;
@property(nonatomic, getter=isDebugConsoleEnabled) BOOL debugConsoleEnabled;
- (struct CGRect)_debugViewFrame;
- (void)_updateDebugConsole;
- (id)_descriptionForLocation:(id)arg1 compact:(BOOL)arg2;
- (void)_updateUserLocationEffects;
- (void)resetUserLocation;
- (void)setUserTrackingMode:(int)arg1 animated:(BOOL)arg2;
- (void)_setUserTrackingMode:(int)arg1 animated:(BOOL)arg2 fromTrackingButton:(BOOL)arg3;
@property(nonatomic) int userTrackingMode;
@property(nonatomic) BOOL trackingAutoSelectsZoomScale;
- (void)_updateHeadingOrientation;
- (int)_interfaceOrientation;
- (BOOL)canRotateForHeading;
@property(readonly, nonatomic) MKUserLocation *userLocation;
@property(readonly, nonatomic) BOOL hasUserLocation;
@property(nonatomic) BOOL showsUserLocation;
- (void)resumeUserLocationUpdates;
- (void)pauseUserLocationUpdates;
@property(nonatomic) BOOL userInteractionPausesLocationUpdates;
- (void)_stopUpdatingUserLocation;
- (void)_startUpdatingUserLocation;
@property(nonatomic) BOOL showingTraffic;
- (void)removePersistentOverlay:(id)arg1;
- (void)addPersistentOverlay:(id)arg1;
- (void)removeOverlay:(id)arg1;
- (void)addOverlay:(id)arg1;
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toPointToView:(id)arg2;
- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(id)arg2;
- (void)mapView:(id)arg1 didDeselectTrafficIncident:(id)arg2;
- (void)mapView:(id)arg1 trafficIncident:(id)arg2 calloutAccessoryControlTapped:(id)arg3;
- (void)mapView:(id)arg1 willSelectTrafficIncident:(id)arg2;
- (void)mapView:(id)arg1 didDeselectLabelMarker:(id)arg2;
- (void)mapView:(id)arg1 labelMarker:(id)arg2 calloutAccessoryControlTapped:(id)arg3;
- (void)mapView:(id)arg1 willSelectLabelMarker:(id)arg2;
- (id)mapView:(id)arg1 painterForOverlay:(id)arg2;
- (void)mapView:(id)arg1 didAnimateInAnnotationMarkers:(id)arg2;
- (void)mapView:(id)arg1 willAnimateInAnnotationMarkers:(id)arg2;
- (void)mapView:(id)arg1 annotationMarker:(id)arg2 calloutAccessoryControlTapped:(id)arg3;
- (id)wrappedAnnotationForAnnotation:(id)arg1;
- (void)deselectAnnotation:(id)arg1 animated:(BOOL)arg2;
- (void)selectAnnotation:(id)arg1 animated:(BOOL)arg2 avoid:(struct CGRect)arg3;
- (void)selectAnnotation:(id)arg1 animated:(BOOL)arg2;
@property(readonly, nonatomic) VKAnnotationMarker *selectedAnnotationMarker;
@property(readonly, nonatomic) VKTrafficIncident *selectedTrafficIncident;
@property(nonatomic) BOOL canSelectAllLabels;
@property(nonatomic) BOOL canSelectPOIs;
- (void)deselectTrafficIncidentAnimated:(BOOL)arg1;
- (void)deselectLabelMarkerAnimated:(BOOL)arg1;
@property(readonly, nonatomic) VKLabelMarker *selectedLabelMarker;
- (void)dismissExpandedCallout;
@property(nonatomic) Class calloutViewClass;
- (id)calloutPopoverController;
- (void)addMarkersForAnnotations:(id)arg1;
- (id)markerForAnnotation:(id)arg1;
- (id)dequeueReusableAnnotationMarkerWithIdentifier:(id)arg1;
@property(readonly, nonatomic) NSArray *annotationMarkers;
@property(readonly, nonatomic) NSArray *annotations;
- (void)replaceAnnotation:(id)arg1 withAnnotation:(id)arg2;
- (void)removeAnnotations:(id)arg1;
- (void)removeAnnotation:(id)arg1;
- (void)addAnnotations:(id)arg1 allowAnimation:(BOOL)arg2;
- (void)addAnnotation:(id)arg1 allowAnimation:(BOOL)arg2;
- (void)addAnnotations:(id)arg1;
- (void)addAnnotation:(id)arg1;
- (void)stopScenicAnimation;
- (void)performScenicAnimationForLocation:(CDStruct_c3b9c2ee)arg1 animationType:(int)arg2;
- (void)prepareScenicAnimationForLocation:(CDStruct_c3b9c2ee)arg1 animationType:(int)arg2 completion:(id)arg3;
- (void)stopPlaceCardAnimation;
- (void)startPlaceCardAnimationAtCoordinate:(CDStruct_c3b9c2ee)arg1 andDistance:(double)arg2;
@property(readonly, nonatomic) BOOL canShowAnimationForPlaceCard;
- (void)showAnimationForSearchResult:(id)arg1 withMapRegion:(id)arg2;
- (BOOL)canShowAnimationForSearchResultWithMapRegion:(id)arg1;
@property(readonly, nonatomic, getter=isGoingToDefaultLocation) BOOL goingToDefaultLocation;
- (void)goToDefaultLocation;
@property(readonly, nonatomic) BOOL canShowFlyover;
@property(readonly, nonatomic, getter=isShowingFlyover) BOOL showingFlyover;
@property(readonly, nonatomic) BOOL canEnter3DMode;
@property(readonly, nonatomic, getter=isPitched) BOOL pitched;
- (void)exit3DMode;
- (void)enter3DMode;
- (CDStruct_02837cd9)mapRectThatFits:(CDStruct_02837cd9)arg1 edgePadding:(struct UIEdgeInsets)arg2;
- (void)goToCoordinateRegion:(CDStruct_02837cd9)arg1 animationType:(int)arg2;
- (void)goToCenterCoordinate:(CDStruct_c3b9c2ee)arg1 zoomLevel:(float)arg2 animationType:(int)arg3;
- (void)_goToMapRegion:(id)arg1 animationType:(int)arg2;
- (id)_mapRegionWithCenterCoordinate:(CDStruct_c3b9c2ee)arg1 zoomScale:(float)arg2;
@property(readonly) float zoomLevel;
- (float)_zoomScale;
- (float)_zoomScaleForMapRegion:(id)arg1;
- (void)setMapRegion:(id)arg1 animationDuration:(double)arg2 pitch:(double)arg3 yaw:(double)arg4 completion:(id)arg5;
- (void)setMapRegion:(id)arg1 animated:(BOOL)arg2 completion:(id)arg3;
- (void)setMapRegion:(id)arg1 animated:(BOOL)arg2;
@property(retain, nonatomic) GEOMapRegion *mapRegion;
- (id)mapRegionThatFits:(id)arg1 edgePadding:(struct UIEdgeInsets)arg2;
@property(readonly, nonatomic) GEOMapRegion *mapRegionOfInterest;
- (void)setCenterCoordinate:(CDStruct_c3b9c2ee)arg1 animated:(BOOL)arg2;
@property(nonatomic) CDStruct_c3b9c2ee centerCoordinate;
@property(readonly, nonatomic) double yaw;
@property(nonatomic, getter=isTiltEnabled) BOOL tiltEnabled;
@property(readonly, nonatomic, getter=isRotating) BOOL rotating;
@property(nonatomic, getter=isRotationEnabled) BOOL rotationEnabled;
@property(nonatomic, getter=isZoomEnabled) BOOL zoomEnabled;
@property(nonatomic, getter=isScrollEnabled) BOOL scrollEnabled;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)_sizeDidChange;
- (void)setHidden:(BOOL)arg1;
@property(nonatomic) unsigned int mapType;
- (BOOL)_supportsVKMapType:(int)arg1;
- (void)stopEffects;
- (void)startEffects;
@property(readonly, nonatomic) BOOL regionChangeIsUserInitiated;
@property(readonly, nonatomic, getter=isChangingRegion) BOOL changingRegion;
- (void)mapView:(id)arg1 didUpdateCalloutView:(id)arg2 forSource:(id)arg3 animated:(BOOL)arg4;
- (void)mapView:(id)arg1 willShowCalloutView:(id)arg2 forSource:(id)arg3;
- (void)mapView:(id)arg1 didUpdateCalloutPopoverController:(id)arg2 forSource:(id)arg3;
- (void)mapView:(id)arg1 willShowCalloutPopoverController:(id)arg2 forSource:(id)arg3;
- (id)mapView:(id)arg1 presentationForAnnotation:(id)arg2;
- (void)mapView:(id)arg1 showingFlyoverDidChange:(BOOL)arg2;
- (void)mapView:(id)arg1 canShowFlyoverDidChange:(BOOL)arg2;
- (void)mapView:(id)arg1 canEnter3DModeDidChange:(BOOL)arg2;
- (void)mapView:(id)arg1 didBecomePitched:(BOOL)arg2;
- (void)gestureControllerDidStopRotatingDecelerating:(id)arg1;
- (void)gestureControllerDidStopRotating:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)gestureControllerWillStartRotating:(id)arg1;
- (void)gestureControllerDidStopZoomingDecelerating:(id)arg1;
- (void)gestureControllerDidStopZooming:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)gestureControllerWillStartZooming:(id)arg1;
- (void)gestureControllerDidStopPanningDecelerating:(id)arg1;
- (void)gestureControllerDidStopPanning:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)gestureControllerWillStartPanning:(id)arg1;
- (void)mapViewDidStopRegionAnimation:(id)arg1 completed:(BOOL)arg2;
- (void)mapViewWillStartRegionAnimation:(id)arg1;
- (void)mapViewDidChangeVisibleRegion:(id)arg1;
- (void)_didChangeRegion;
- (void)_willChangeRegion:(BOOL)arg1 userInitiated:(BOOL)arg2;
- (void)gestureControllerDidStopUserInteraction:(id)arg1;
- (void)gestureControllerWillStartUserInteraction:(id)arg1;
- (void)mapViewDidBecomeFullyDrawn:(id)arg1;
- (void)mapViewDidFailLoadingTiles:(id)arg1 withError:(id)arg2;
- (void)mapViewDidFinishLoadingTiles:(id)arg1;
- (void)mapViewDidStartLoadingTiles:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)_addDebugGesture;
- (struct UIEdgeInsets)defaultInsetsForPinAnnotations;
@property(nonatomic) struct UIEdgeInsets edgeInsets;
- (void)restoreViewportFromDictionary:(id)arg1;
- (id)viewportDictionary;
@property(nonatomic, getter=isLoadingEnabled) BOOL loadingEnabled;
@property(nonatomic, getter=isLocationPulseEnabled) BOOL locationPulseEnabled;
@property(nonatomic, getter=isLocationPropagationEnabled) BOOL locationPropagationEnabled;
- (void)_updateAllowsTilt;
@property(readonly, nonatomic) BOOL allowsTilt;
- (void)_updateAllowsRotation;
@property(readonly, nonatomic) BOOL allowsRotation;
@property(readonly, nonatomic) UITapGestureRecognizer *nonselectingTapGestureRecognizer;
- (id)detailedDescription;
- (id)mapAttributionWithStringAttributes:(id)arg1;
@property(readonly, nonatomic) NSArray *visibleTileSets;
- (void)deviceOrientationDidChange:(id)arg1;
- (void)geoDefaultsDidChange:(id)arg1;
- (void)activeTileGroupDidChange:(id)arg1;
@property(nonatomic) struct CGSize attributionAnchorOffset;
@property(nonatomic) BOOL shouldSplitRouteLine;
- (void)_updateAttribution;
@property(nonatomic) id <MKWorldViewDelegate> delegate;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 gestureRecognizerHostView:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end


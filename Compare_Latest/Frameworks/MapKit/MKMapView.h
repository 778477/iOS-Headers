/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "UIView.h"

#import "MKAnnotationContainerViewDelegate-Protocol.h"
#import "MKMapGestureControllerDelegate-Protocol.h"
#import "MKVariableDelayTapRecognizerDelegate-Protocol.h"
#import "NSCoding-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "VKMapViewDelegate-Protocol.h"

@class CLLocation, MKMapViewInternal, MKMapViewPositioningChange, MKUserLocation, MKUserLocationView, NSArray;

@interface MKMapView : UIView <UIGestureRecognizerDelegate, MKVariableDelayTapRecognizerDelegate, MKAnnotationContainerViewDelegate, VKMapViewDelegate, MKMapGestureControllerDelegate, NSCoding>
{
    MKMapViewInternal *_internal;
}

+ (CDStruct_90e2a262)_mapRectThatFitsViewBounds:(struct CGRect)arg1 centeringRect:(struct CGRect)arg2 mapRect:(CDStruct_90e2a262)arg3 edgePadding:(struct UIEdgeInsets)arg4;
+ (void)setRendersInBackgroundByDefault:(BOOL)arg1;
+ (CDStruct_90e2a262)regionThatFitsMapType:(unsigned int)arg1 viewSize:(struct CGSize)arg2 region:(CDStruct_90e2a262)arg3;
+ (unsigned int)minZoomLevelForMapType:(unsigned int)arg1 viewSize:(struct CGSize)arg2;
- (void)setVisibleMapRect:(CDStruct_90e2a262)arg1 animated:(BOOL)arg2;
@property(nonatomic) CDStruct_90e2a262 visibleMapRect;
- (CDStruct_90e2a262)_visibleUnderRotationMapRect;
- (void)setVisibleMapRect:(CDStruct_90e2a262)arg1 edgePadding:(struct UIEdgeInsets)arg2 animated:(BOOL)arg3;
- (CDStruct_90e2a262)mapRectThatFits:(CDStruct_90e2a262)arg1;
- (CDStruct_90e2a262)mapRectThatFits:(CDStruct_90e2a262)arg1 edgePadding:(struct UIEdgeInsets)arg2;
- (CDStruct_0c7fa811)_zoomRegionForMapRect:(CDStruct_90e2a262)arg1 edgePadding:(struct UIEdgeInsets)arg2 maxZoomLevel:(int)arg3 minZoomLevel:(int)arg4;
- (void)drawRect:(struct CGRect)arg1 forViewPrintFormatter:(id)arg2;
- (void)setHidden:(BOOL)arg1;
- (void)layoutSubviews;
- (id)viewForAnnotation:(id)arg1;
- (id)dequeueReusableAnnotationViewWithIdentifier:(id)arg1;
- (void)removeAnnotations:(id)arg1;
- (void)removeAnnotation:(id)arg1;
- (void)addAnnotations:(id)arg1;
- (void)addAnnotation:(id)arg1;
- (void)deselectAnnotation:(id)arg1 animated:(BOOL)arg2;
- (void)selectAnnotation:(id)arg1 animated:(BOOL)arg2;
- (struct CADoubleRect)_convertMapRect:(CDStruct_90e2a262)arg1 toDoubleRectToView:(id)arg2;
- (CDStruct_90e2a262)_convertDoubleRect:(struct CADoubleRect)arg1 toMapRectFromView:(id)arg2;
- (struct CADoublePoint)_convertMapPoint:(CDStruct_c3b9c2ee)arg1 toDoublePointToView:(id)arg2;
- (CDStruct_90e2a262)convertRect:(struct CGRect)arg1 toRegionFromView:(id)arg2;
- (struct CGRect)convertRegion:(CDStruct_90e2a262)arg1 toRectToView:(id)arg2;
- (CDStruct_c3b9c2ee)_convertDoublePoint:(struct CADoublePoint)arg1 toCoordinateFromView:(id)arg2;
- (CDStruct_c3b9c2ee)_convertDoublePoint:(struct CADoublePoint)arg1 toMapPointFromView:(id)arg2;
- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(id)arg2;
- (struct CADoublePoint)_convertCoordinate:(CDStruct_c3b9c2ee)arg1 toDoublePointToView:(id)arg2;
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toPointToView:(id)arg2;
@property(copy, nonatomic) NSArray *selectedAnnotations;
- (id)annotationsInMapRect:(CDStruct_90e2a262)arg1;
@property(readonly, nonatomic) NSArray *annotations;
- (BOOL)goToRegion:(CDStruct_90e2a262)arg1 animationType:(int)arg2;
@property(nonatomic) CDStruct_90e2a262 region;
- (void)setRegion:(CDStruct_90e2a262)arg1 animated:(BOOL)arg2;
- (CDStruct_c3b9c2ee)_centerMapPoint;
@property(nonatomic) CDStruct_c3b9c2ee centerCoordinate;
- (void)setCenterCoordinate:(CDStruct_c3b9c2ee)arg1 animated:(BOOL)arg2;
- (void)goToDefaultLocation;
- (void)_displayWorld;
- (void)annotationContainer:(id)arg1 didDeselectAnnotationView:(id)arg2;
- (void)annotationContainer:(id)arg1 didSelectAnnotationView:(id)arg2;
- (void)annotationContainer:(id)arg1 didAddAnnotationViews:(id)arg2;
- (id)annotationContainer:(id)arg1 viewForAnnotation:(id)arg2;
- (void)annotationContainer:(id)arg1 annotationView:(id)arg2 calloutAccessoryControlTapped:(id)arg3;
- (void)annotationContainerDidDropPins:(id)arg1;
- (void)annotationContainerWillDropPins:(id)arg1;
- (float)annotationContainer:(id)arg1 pinDropDistanceForCoordinate:(CDStruct_c3b9c2ee)arg2 maxDistance:(float *)arg3 startPoint:(struct CGPoint *)arg4 shadowStartPoint:(struct CGPoint *)arg5;
- (BOOL)annotationContainerIsUserLocationChangeDone:(id)arg1;
- (struct CGRect)annotationContainerVisibleRect:(id)arg1;
- (void)annotationContainerDidAnimateBubble:(id)arg1;
- (void)annotationContainerWillAnimateBubble:(id)arg1;
- (void)annotationContainer:(id)arg1 scrollToRevealCalloutWithOffset:(struct CGPoint)arg2;
@property(readonly, nonatomic) struct CGRect annotationVisibleRect;
- (struct CGRect)visibleCenteringRectInView:(id)arg1;
- (struct CGRect)visibleRectInView:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)mapViewDidStopRegionAnimation:(id)arg1 completed:(BOOL)arg2;
- (void)mapViewDidDraw:(id)arg1;
- (void)mapViewDidChangeVisibleRegion:(id)arg1;
- (void)gestureControllerDidStopZoomingDecelerating:(id)arg1 direction:(int)arg2;
- (void)gestureControllerDidStopZooming:(id)arg1 direction:(int)arg2 willDecelerate:(BOOL)arg3;
- (void)gestureControllerWillStartZooming:(id)arg1 animated:(BOOL)arg2;
- (void)gestureControllerDidStopPanningDecelerating:(id)arg1;
- (void)gestureControllerDidStopPanning:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)gestureControllerWillStartPanning:(id)arg1;
- (void)gestureControllerDidStopUserInteraction:(id)arg1;
- (void)gestureControllerWillStartUserInteraction:(id)arg1;
- (void)mapViewDidFailLoadingTiles:(id)arg1 withError:(id)arg2;
- (void)mapViewDidFinishLoadingTiles:(id)arg1;
- (void)mapViewDidStartLoadingTiles:(id)arg1;
- (void)updateTiling;
- (void)_showAddedAnnotationsAnimated:(BOOL)arg1;
- (void)_showAddedAnnotationsAndRouteAnimated:(BOOL)arg1;
- (void)_sizeDidChangeWithCenterCoordinate:(CDStruct_c3b9c2ee)arg1;
- (void)_sizeWillChange;
- (void)_updateRotationAttributes;
- (void)_updateCenteredAttributesWithCoordinate:(CDStruct_c3b9c2ee)arg1;
- (void)_userScrollingEnded;
- (void)_selectUserLocationTypeWithDeltaZoomLevel:(float)arg1;
- (void)resumeUserLocationUpdates;
- (void)pauseUserLocationUpdates;
- (CDStruct_c3b9c2ee)_zoomCenterPointWithAnchor:(int)arg1 point:(struct CGPoint)arg2 zoomScale:(float)arg3;
- (double)_goToCenterCoordinate:(CDStruct_c3b9c2ee)arg1 zoomLevel:(float)arg2 animationType:(int)arg3 cancelDefaultLocationTimer:(BOOL)arg4;
- (float)_zoomScaleForMapRegion:(id)arg1;
- (CDStruct_c3b9c2ee)_centerMapPointForMapRegion:(id)arg1;
- (id)_mapRegionWithCenterCoordinate:(CDStruct_c3b9c2ee)arg1 zoomScale:(float)arg2;
- (double)_goToCenterCoordinate:(CDStruct_c3b9c2ee)arg1 zoomLevel:(float)arg2 animationType:(int)arg3;
- (BOOL)goToCenterCoordinate:(CDStruct_c3b9c2ee)arg1 longLatSpan:(struct CGSize)arg2 animationType:(int)arg3;
- (BOOL)goToCenterCoordinate:(CDStruct_c3b9c2ee)arg1 zoomLevel:(float)arg2 animationType:(int)arg3;
- (float)_zoomLevelForRegion:(CDStruct_90e2a262)arg1 includeAccessoryPadding:(BOOL)arg2;
- (float)_zoomLevelForMapRect:(CDStruct_90e2a262)arg1 includeAccessoryPadding:(BOOL)arg2;
- (double)_panDurationFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)_updateContentBounds;
- (void)_insertSubview:(id)arg1;
- (int)_viewIndexForSubview:(id)arg1;
- (void)_freezeUserLocationView;
- (float)pointDistanceFromCoordinate:(CDStruct_c3b9c2ee)arg1 toCoordinate:(CDStruct_c3b9c2ee)arg2;
- (void)scrollWithOffset:(struct CGPoint)arg1 andAnimationType:(int)arg2;
- (void)_fixUserLocationFromPresentationValue;
- (void)_clearFixedUserLocation;
- (BOOL)_shouldConservePowerAnimationType:(int)arg1;
- (void)setCallsDelegateForAllRegionChanges:(BOOL)arg1;
- (BOOL)callsDelegateForAllRegionChanges;
- (id)_stringWithEventMode:(int)arg1;
- (void)_cancelAccessoriesAndDoubleTap;
- (void)_cancelDoubleTap;
- (void)_cancelAccessories;
- (void)_clearEventMode:(int)arg1;
- (void)startEffects;
- (void)stopEffects;
- (BOOL)annotationContainerIsRotated:(id)arg1;
- (BOOL)annotationContainerEffectsEnabled:(id)arg1;
- (void)_setZoomScale:(float)arg1 centerMapPoint:(CDStruct_c3b9c2ee)arg2 duration:(double)arg3 animationType:(int)arg4;
- (void)_addSetRegionBlockWhenSized:(id)arg1;
- (void)_goToMapRegion:(id)arg1 duration:(double)arg2 animationType:(int)arg3;
- (void)_setZoomScale:(float)arg1 centerCoordinate:(CDStruct_c3b9c2ee)arg2 duration:(double)arg3 animationType:(int)arg4;
- (void)_updateEffects;
- (void)_updateShouldDisplayEffects;
- (void)_updateScrollContainerView:(BOOL)arg1;
- (id)scrollContainerView;
- (void)_updateAccessories;
- (BOOL)_animationTypeIgnoresEvents:(int)arg1;
- (void)_updateScrollingAndGestures;
- (float)_boundedZoomLevel:(float)arg1 coordinate:(CDStruct_c3b9c2ee)arg2;
- (float)_boundedZoomLevel:(float)arg1;
- (float)_maxZoomLevelForCoordinate:(CDStruct_c3b9c2ee)arg1;
- (void)_annotationViewDragStateChanged:(id)arg1;
- (void)_didEndUserInteraction;
- (void)_willStartUserInteraction;
- (void)_didEndScroll;
- (void)_willStartScroll:(BOOL)arg1;
- (void)_didEndZoom;
- (void)_willStartZoom:(BOOL)arg1;
- (void)_didChangeRegionMidstream:(BOOL)arg1;
- (void)_willChangeRegionAnimated:(BOOL)arg1 userInitiated:(BOOL)arg2;
- (void)_scrollViewTouchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)_scrollViewTouchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_scrollViewTouchesEnded:(id)arg1 withEvent:(id)arg2 cancelled:(BOOL)arg3;
- (void)_scrollViewTouchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)toggleLocationConsole:(id)arg1;
- (void)handleTap:(id)arg1;
- (BOOL)calloutViewIsExpanded;
- (BOOL)calloutViewContainsPoint:(struct CGPoint)arg1;
- (void)handleLongPress:(id)arg1;
- (void)_handleLongPressDidEnd;
- (void)_dropDraggingAnnotationView:(BOOL)arg1;
- (double)variableDelayTapRecognizer:(id)arg1 shouldWaitForNextTapForDuration:(double)arg2 afterTouch:(id)arg3;
- (BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)_configureGestureRecognizers;
- (void)_addDebugGesture;
- (id)annotationContainer;
- (void)_setUserTrackingMode:(int)arg1 animated:(BOOL)arg2 shouldZoom:(BOOL)arg3 fromTrackingButton:(BOOL)arg4;
- (void)_setUserTrackingMode:(int)arg1 animated:(BOOL)arg2 fromTrackingButton:(BOOL)arg3;
- (void)setUserTrackingMode:(int)arg1 animated:(BOOL)arg2;
@property(nonatomic) int userTrackingMode;
- (BOOL)canRotateForHeading;
- (BOOL)hasUserLocation;
@property(readonly, nonatomic) MKUserLocation *userLocation;
- (BOOL)hasRenderedSomething;
@property(readonly, nonatomic, getter=isUserLocationVisible) BOOL userLocationVisible;
@property(nonatomic) BOOL showsUserLocation;
@property(nonatomic, getter=isZoomEnabled) BOOL zoomEnabled;
@property(nonatomic, getter=isScrollEnabled) BOOL scrollEnabled;
- (void)setCenteringRect:(struct CGRect)arg1;
- (struct CGRect)centeringRect;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (float)_zoomLevel;
- (void)set_zoomScale:(float)arg1;
- (float)_zoomScale;
- (void)set_rotationState:(int)arg1;
- (int)_rotationState;
- (id)debugView;
- (int)mapRegionZoomLevel;
- (id)mapRegion;
- (BOOL)_isHandlingUserEvent;
- (CDStruct_c3b9c2ee)longLatSpan;
- (int)_roundedZoomLevel;
@property(readonly) float minZoomLevel;
- (struct CGPoint)centerLongLat;
- (struct CGPoint)_centerPointOffset;
- (struct CGPoint)_centerPoint;
- (void)_setScrolling:(BOOL)arg1 animated:(BOOL)arg2;
- (void)_setScrolling:(BOOL)arg1;
- (BOOL)_isScrollingAnimation;
- (BOOL)_isVisible;
- (BOOL)_wasScrolling;
- (BOOL)isGoingToDefaultLocation;
- (BOOL)isRegionChanging;
- (BOOL)isScrolling;
@property(readonly, nonatomic, getter=isZooming) BOOL zooming;
- (void)_setEventMode:(int)arg1;
- (void)setShouldReloadSynchronously:(BOOL)arg1;
- (BOOL)shouldReloadSynchronously;
- (void)setLoadingEnabled:(BOOL)arg1;
- (BOOL)isLoadingEnabled;
- (BOOL)isSuspended;
- (void)setSuspended:(BOOL)arg1;
- (BOOL)effectsEnabled;
- (void)set_startEffectsTimer:(id)arg1;
- (id)_startEffectsTimer;
- (void)_setAnimationType:(int)arg1;
- (int)animationType;
- (void)_setMapType:(unsigned int)arg1 onInit:(BOOL)arg2;
@property(nonatomic) unsigned int mapType;
- (void)set_drawGridBackground:(BOOL)arg1 force:(BOOL)arg2;
- (void)_updateBackgroundFillColor;
- (void)set_drawGridBackground:(BOOL)arg1;
- (BOOL)_drawGridBackground;
- (void)_updateGridBackground:(BOOL)arg1;
- (void)_updateGridBackground;
- (BOOL)_useGridBackground;
- (int)_interfaceOrientation;
- (void)_updateHeadingOrientation;
@property(nonatomic) id <MKMapViewDelegate> delegate;
- (void)set_defaultLocationTimer:(id)arg1;
- (id)_defaultLocationTimer;
- (void)set_annotationTimer:(id)arg1;
- (id)_annotationTimer;
- (Class)_calloutViewClass;
- (void)_setCalloutViewClass:(Class)arg1;
- (void)set_annotationViewsAreAddedImmediately:(BOOL)arg1;
- (BOOL)_annotationViewsAreAddedImmediately;
- (void)setRendersInBackground:(BOOL)arg1;
- (BOOL)isShowingNoDataPlaceholders;
- (void)setShowsAttributionBadge:(BOOL)arg1;
- (BOOL)showsAttributionBadge;
- (void)setShowsAttribution:(BOOL)arg1;
- (BOOL)showsAttribution;
- (void)deviceOrientationDidChange:(id)arg1;
- (void)geoDefaultsDidChange:(id)arg1;
- (void)activeTileGroupDidChange:(id)arg1;
- (id)mapAttributionWithStringAttributes:(id)arg1;
- (struct CGRect)attributionFrame;
- (void)_updateAttribution;
- (void)didMoveToWindow;
- (void)dealloc;
- (id)awakeAfterUsingCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initFromIBWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(int)arg2;
- (id)_commonInitAndEnableLoading:(BOOL)arg1 fromIB:(BOOL)arg2;
- (CDStruct_90e2a262)regionThatFits:(CDStruct_90e2a262)arg1;
- (void)stopUpdatingUserLocation;
- (void)startUpdatingUserLocation;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (BOOL)locationManagerShouldPauseLocationUpdates:(id)arg1;
- (void)locationManagerDidReset:(id)arg1;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (void)locationManagerUpdatedLocation:(id)arg1;
- (BOOL)_deviceIsPluggedIn;
- (void)_updatePositioningChangeMetrics:(id)arg1;
- (void)_runPositioningChange;
- (void)onMapAddView:(id)arg1 change:(id)arg2;
@property(readonly, nonatomic) MKUserLocationView *userLocationView;
- (void)set_hoverExpirationTimer:(id)arg1;
- (id)_hoverExpirationTimer;
- (void)_stopHoverWithChange:(id)arg1;
- (void)_startHoverExpirationTimerWithDuration:(double)arg1 change:(id)arg2;
- (void)_resumeUserLocationUpdates:(BOOL)arg1;
- (void)_pauseUserLocationUpdates;
@property(nonatomic) BOOL ignoreLocationUpdates;
- (BOOL)_haveNewPendingLocation;
- (BOOL)_isReadyToRunPositioningChange;
@property(readonly, nonatomic, getter=isUserLocationChangeDone) BOOL userLocationChangeDone;
- (void)_startPositioningChange:(id)arg1;
- (id)_positioningChangeWithLocation:(id)arg1 source:(int)arg2 hasFocus:(BOOL)arg3 isUpdated:(BOOL)arg4;
- (id)_positioningChange:(BOOL)arg1;
- (BOOL)_hasHovered;
- (void)_stopHover;
- (BOOL)_isOrWillHover;
- (BOOL)_isHoverScheduled;
- (BOOL)_isHovering;
- (BOOL)_shouldChangeZoomLevel:(float *)arg1 withChange:(id)arg2;
- (void)_updatePositioningChangeMetadata:(id)arg1;
- (float)_zoomLevelForUserLocation:(id)arg1 distanceHysteresis:(BOOL)arg2 positionViewHysteresis:(BOOL)arg3;
- (void)userLocationViewDidQuiesce:(id)arg1;
- (void)userLocationViewAccuracyDidUpdate:(id)arg1;
- (void)_goToCurrentLocationOnTransitionEnd;
- (BOOL)_isUserLocationNearEventPoint:(struct CGPoint)arg1;
- (BOOL)_isUserLocationNearPoint:(struct CGPoint)arg1 hitSize:(float)arg2;
- (void)set_positioningChangeTimer:(id)arg1;
- (id)_positioningChangeTimer;
- (void)set_scrollToReCenterUserTimer:(id)arg1;
- (id)_scrollToReCenterUserTimer;
- (void)_scheduleScrollToReCenterUserIfNeeded;
- (BOOL)isScrollToUserCenterPending;
- (void)_cancelRunPositioningChange;
- (void)_scheduleRunPositioningChange;
- (void)_scheduleRunPositioningChange:(id)arg1 delay:(double)arg2;
- (void)_runPositioningChangeIfNeeded:(id)arg1;
- (void)_runPositioningChangeIfNeeded;
- (void)_cancelScrollToReCenterUser;
- (void)_scheduleScrollToReCenterUser;
- (void)removeUserLocation;
- (void)goToUserLocation;
- (void)_scrollToUserLocation;
- (void)_goToUserLocation:(BOOL)arg1 shouldZoom:(BOOL)arg2;
- (BOOL)_shouldZoomOnLiveTracking;
- (float)_zoomLevelForLocation:(id)arg1 previousLocation:(id)arg2;
- (void)resetUserLocation;
- (void)_resetPositioningChange;
@property(retain, nonatomic) CLLocation *fixedUserLocation;
- (struct CGPoint)userPosition;
@property(nonatomic) int userLocationSource;
@property(retain, nonatomic) CLLocation *predictedUserLocation;
- (BOOL)isTrackingUserLocation;
- (BOOL)isRunningPositioningChange;
- (BOOL)isUserPresentationVisible;
- (BOOL)isUserLocationViewCentered;
- (BOOL)isUserLocationBounded;
- (BOOL)isBoundedByUserLocation;
- (BOOL)_isUserLocationInView:(BOOL)arg1;
- (void)_ensureLiveTrackingResourcesInitialized;
- (void)_userLocationViewWillDisappear:(id)arg1;
- (void)_userLocationViewDidAppear:(id)arg1;
- (void)_updateLocationConsole;
- (id)descriptionForLocation:(id)arg1 compact:(BOOL)arg2;
- (void)setLocationConsoleEnabled:(BOOL)arg1;
- (BOOL)isLocationConsoleEnabled;
- (struct CGRect)_debugViewFrame;
@property(retain, nonatomic) MKMapViewPositioningChange *positioningChange;
- (void)setLiveTrackingAutoSelectZoomLevel:(BOOL)arg1;
- (BOOL)liveTrackingAutoSelectZoomLevel;
- (void)disableLiveTracking;
- (void)locationManagerFailedToUpdateHeading:(id)arg1 withError:(id)arg2;
- (void)locationManagerUpdatedHeading:(id)arg1;
- (void)_considerMovingToThrottledHeading;
- (void)_updateHeading:(id)arg1 rotationType:(int)arg2 animated:(BOOL)arg3;
- (BOOL)_updateRotationSupported;
- (BOOL)_rotationPossible;
- (void)_stopTrackingHeading;
- (void)_startTrackingHeading;
- (void)enableMapRotationIfNeeded;
- (void)disableMapRotation:(BOOL)arg1;
- (void)disableHeadingTracking:(BOOL)arg1;
- (void)setHeadingTrackingEnabled:(BOOL)arg1;
- (BOOL)isHeadingTrackingEnabled;
- (void)resumeUserHeadingUpdates;
- (void)pauseUserHeadingUpdates;
- (void)setShouldRotateForHeading:(BOOL)arg1;
- (BOOL)shouldRotateForHeading;
- (struct CGRect)contentBounds;
- (void)overlayContainerAddedViews:(id)arg1;
- (id)createViewForOverlay:(id)arg1;
- (id)overlayContainer;
@property(readonly, nonatomic) NSArray *overlays;
- (id)viewForOverlay:(id)arg1;
- (void)insertOverlay:(id)arg1 belowOverlay:(id)arg2;
- (void)insertOverlay:(id)arg1 aboveOverlay:(id)arg2;
- (void)exchangeOverlayAtIndex:(unsigned int)arg1 withOverlayAtIndex:(unsigned int)arg2;
- (void)insertOverlay:(id)arg1 atIndex:(unsigned int)arg2;
- (void)removeOverlays:(id)arg1;
- (void)removeOverlay:(id)arg1;
- (void)addOverlays:(id)arg1;
- (void)addOverlay:(id)arg1;
- (BOOL)regionChangeIsUserInitiated;

@end


/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "UICollectionViewController.h"

#import "GKFriendPickerViewControllerDelegate-Protocol.h"
#import "UICollectionViewDataSource-Protocol.h"
#import "UICollectionViewDelegate-Protocol.h"
#import "UICollectionViewDelegateFlowLayout-Protocol.h"

@class GKButton, GKCollectionView, GKMatchRequest, GKMultiplayerCollectionViewLayout, NSArray, NSDictionary, NSString, UIAlertView, UILabel;

@interface GKMultiplayerViewController : UICollectionViewController <UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, GKFriendPickerViewControllerDelegate>
{
    GKMatchRequest *_matchRequest;
    NSArray *_participants;
    struct _NSRange _participantsRange;
    int _maxParticipants;
    int _status;
    int _numberInvited;
    int _numberInvitesRemaining;
    int _numberAccepted;
    BOOL _hosted;
    NSString *_defaultInvitationMessage;
    Class _contentsClass;
    NSDictionary *_contentsKeymap;
    BOOL _didLayout;
    struct UIEdgeInsets _topSectionInsets;
    struct UIEdgeInsets _participantSectionInsets;
    float _participantGap;
    struct CGSize _buttonSize;
    struct CGSize _buttonGap;
    struct CGSize _statusSize;
    BOOL _setupNotifications;
    UIAlertView *_alert;
    GKButton *_playNowButton;
    NSString *_infoText;
    GKButton *_inviteButton;
    struct UIEdgeInsets _infoInsets;
    float _infoWidth;
    UILabel *_infoLabel;
}

@property(retain, nonatomic) UILabel *infoLabel; // @synthesize infoLabel=_infoLabel;
@property(nonatomic) float infoWidth; // @synthesize infoWidth=_infoWidth;
@property(nonatomic) struct UIEdgeInsets infoInsets; // @synthesize infoInsets=_infoInsets;
@property(retain, nonatomic) GKButton *inviteButton; // @synthesize inviteButton=_inviteButton;
@property(nonatomic) NSString *infoText; // @synthesize infoText=_infoText;
@property(retain, nonatomic) GKButton *playNowButton; // @synthesize playNowButton=_playNowButton;
@property(nonatomic) UIAlertView *alert; // @synthesize alert=_alert;
@property(nonatomic) BOOL setupNotifications; // @synthesize setupNotifications=_setupNotifications;
@property(nonatomic) struct CGSize statusSize; // @synthesize statusSize=_statusSize;
@property(nonatomic) struct CGSize buttonGap; // @synthesize buttonGap=_buttonGap;
@property(nonatomic) struct CGSize buttonSize; // @synthesize buttonSize=_buttonSize;
@property(nonatomic) float participantGap; // @synthesize participantGap=_participantGap;
@property(nonatomic) struct UIEdgeInsets participantSectionInsets; // @synthesize participantSectionInsets=_participantSectionInsets;
@property(nonatomic) struct UIEdgeInsets topSectionInsets; // @synthesize topSectionInsets=_topSectionInsets;
@property(nonatomic) BOOL didLayout; // @synthesize didLayout=_didLayout;
@property(retain, nonatomic) NSDictionary *contentsKeymap; // @synthesize contentsKeymap=_contentsKeymap;
@property(nonatomic) Class contentsClass; // @synthesize contentsClass=_contentsClass;
@property(copy, nonatomic) NSString *defaultInvitationMessage; // @synthesize defaultInvitationMessage=_defaultInvitationMessage;
@property(nonatomic, getter=isHosted) BOOL hosted; // @synthesize hosted=_hosted;
@property(nonatomic) int numberAccepted; // @synthesize numberAccepted=_numberAccepted;
@property(nonatomic) int numberInvitesRemaining; // @synthesize numberInvitesRemaining=_numberInvitesRemaining;
@property(nonatomic) int numberInvited; // @synthesize numberInvited=_numberInvited;
@property(nonatomic) int status; // @synthesize status=_status;
@property(nonatomic) int maxParticipants; // @synthesize maxParticipants=_maxParticipants;
@property(nonatomic) struct _NSRange participantsRange; // @synthesize participantsRange=_participantsRange;
@property(retain, nonatomic) NSArray *participants; // @synthesize participants=_participants;
@property(copy, nonatomic) GKMatchRequest *matchRequest; // @synthesize matchRequest=_matchRequest;
- (void)layoutSubviewsForInterfaceOrientation:(int)arg1;
- (void)willRotateToInterfaceOrientation:(int)arg1 duration:(double)arg2;
- (BOOL)shouldAutorotateToInterfaceOrientation:(int)arg1;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)setupCollectionView;
- (void)configureStatusView:(id)arg1;
- (int)collectionView:(id)arg1 numberOfItemsInSection:(int)arg2;
- (int)numberOfSectionsInCollectionView:(id)arg1;
- (void)cancelAlertWithoutDelegateCallback;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(int)arg2;
- (void)sendStatusUpdate;
- (void)finishWithError:(id)arg1;
- (void)findPlayersIfNeeded;
- (void)playNow;
- (void)authenticatedStatusChanged:(id)arg1;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)loadView;
- (void)updateUI;
- (void)updateUIAndReload:(BOOL)arg1;
- (void)friendPickerViewController:(id)arg1 didFinishWithPlayers:(id)arg2 inviteMessage:(id)arg3;
- (void)showFriendPicker;
- (BOOL)supportsNearbyPlayers;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)participantCanceled:(id)arg1;
- (void)participantAdded:(id)arg1;
- (void)scrollUpFromBottom;
- (void)scrollBottom;
- (void)revertToEmptyParticipant:(id)arg1;
- (void)revertToEmptyParticipant:(id)arg1 animated:(BOOL)arg2;
- (BOOL)canCancelParticipant:(id)arg1 atIndex:(int)arg2;
- (id)addPlayers:(id)arg1;
- (id)participantWithID:(id)arg1;
- (void)updateParticipants;
- (void)updateParticipant:(id)arg1;
- (void)setupParticipants;
- (id)currentPlayerIDs;
- (id)invitedPlayers;
- (id)localParticipant;
@property(readonly, nonatomic) GKCollectionView *gkCollectionView;
- (void)updateButtonState;
- (BOOL)shouldShowInfoLabel;
@property(readonly, nonatomic) GKMultiplayerCollectionViewLayout *gkCollectionViewLayout;
- (void)dealloc;
- (id)initWithMatchRequest:(id)arg1;
- (id)init;

@end


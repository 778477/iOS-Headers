/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <GameKit/GKMultiplayerViewController.h>

#import "AVAudioPlayerDelegate-Protocol.h"
#import "GKFriendPickerViewControllerDelegate-Protocol.h"
#import "GKMatchDelegate-Protocol.h"
#import "UIActionSheetDelegate-Protocol.h"

@class AVAudioPlayer, GKInvite, GKMatch, GKMatchmakerViewController, NSArray;

@interface GKMatchmakerViewControllerPrivate : GKMultiplayerViewController <UIActionSheetDelegate, GKFriendPickerViewControllerDelegate, GKMatchDelegate, AVAudioPlayerDelegate>
{
    id <GKMatchmakerViewControllerDelegate> _delegateWeak;
    GKInvite *_acceptedInvite;
    BOOL _reachable;
    GKMatch *_match;
    BOOL _sentAccept;
    BOOL _geniusMatching;
    BOOL _loadingExistingPlayers;
    int _automatchActivity;
    AVAudioPlayer *_audioPlayer;
    GKMatch *_foundMatch;
    BOOL _hadInviteFailure;
    NSArray *_foundPlayerIDs;
}

@property(retain, nonatomic) NSArray *foundPlayerIDs; // @synthesize foundPlayerIDs=_foundPlayerIDs;
@property(nonatomic) BOOL hadInviteFailure; // @synthesize hadInviteFailure=_hadInviteFailure;
@property(retain, nonatomic) GKMatch *foundMatch; // @synthesize foundMatch=_foundMatch;
@property(retain, nonatomic) AVAudioPlayer *audioPlayer; // @synthesize audioPlayer=_audioPlayer;
@property(nonatomic) int automatchActivity; // @synthesize automatchActivity=_automatchActivity;
@property(nonatomic) BOOL loadingExistingPlayers; // @synthesize loadingExistingPlayers=_loadingExistingPlayers;
@property(nonatomic) BOOL geniusMatching; // @synthesize geniusMatching=_geniusMatching;
@property(nonatomic) BOOL sentAccept; // @synthesize sentAccept=_sentAccept;
@property(retain, nonatomic) GKMatch *match; // @synthesize match=_match;
@property(nonatomic) BOOL reachable; // @synthesize reachable=_reachable;
@property(retain, nonatomic) GKInvite *acceptedInvite; // @synthesize acceptedInvite=_acceptedInvite;
- (void)match:(id)arg1 player:(id)arg2 didChangeState:(int)arg3;
- (void)match:(id)arg1 didReceiveData:(id)arg2 fromPlayer:(id)arg3;
- (void)match:(id)arg1 didFailWithError:(id)arg2;
- (void)match:(id)arg1 connectionWithPlayerFailed:(id)arg2 withError:(id)arg3;
- (void)inviteMessagePlayerStatusFromBytes:(const char *)arg1 withLength:(unsigned int)arg2;
- (void)updateParticipantsUsingStatusInfo:(id)arg1 andLoadedPlayers:(id)arg2;
- (void)sendStatusUpdate;
- (id)playerInfoForParticipant:(id)arg1;
- (void)playersToInvite:(id)arg1;
- (void)localPlayerAcceptedGameInvite:(id)arg1;
- (void)inviterCancelledNotification:(id)arg1;
- (void)cancelAlertWithoutDelegateCallback;
- (void)finishWithError:(id)arg1;
- (void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(BOOL)arg2;
- (void)finishWithPlayers:(id)arg1;
- (void)finishWithMatch:(id)arg1;
- (void)cleanupStateForCancelOrError;
- (void)cancelButtonPressed;
- (void)cancelGeniusMatchmaking;
- (void)matchmakingDidCancel;
- (void)cancel;
- (void)participantCanceled:(id)arg1;
- (void)startGameNotifyOthers:(BOOL)arg1;
- (void)findPlayersIfNeeded;
- (void)revertToEmptyParticipantForDecline:(id)arg1;
- (void)invitedPlayer:(id)arg1 responded:(int)arg2;
- (void)playNow;
- (BOOL)canFindMorePlayers;
- (BOOL)needMorePlayers;
- (BOOL)shouldFindMorePlayers;
- (BOOL)showAlertIfPendingInvites;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(int)arg2;
- (void)showAlertForTag:(int)arg1;
- (void)acceptInvite;
- (void)failedToAcceptInviteWithError:(id)arg1;
- (void)setHostedPlayer:(id)arg1 connected:(BOOL)arg2;
- (BOOL)supportsNearbyPlayers;
- (void)setHosted:(BOOL)arg1;
- (void)participantDisconnected:(id)arg1;
- (void)participantConnected:(id)arg1;
- (BOOL)havePendingParticipants;
- (void)updateStateForInviteFailure;
- (void)setupForGeniusMatchmaking;
- (void)queryGroupActivity;
- (void)updateWaitTime;
- (void)authenticatedStatusChanged:(id)arg1;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)loadView;
- (void)addPlayersToMatch:(id)arg1;
- (void)updateUIAndReload:(BOOL)arg1;
@property(readonly, nonatomic) GKMatchmakerViewController *matchmakerViewController; // @dynamic matchmakerViewController;
@property(nonatomic) id <GKMatchmakerViewControllerDelegate> delegate; // @synthesize delegate=_delegateWeak;
- (void)dealloc;
- (id)initWithInvite:(id)arg1;
- (id)initWithMatchRequest:(id)arg1;
- (void)addPlayerIDsIfNeededWithCompletionHandler:(id)arg1;
- (id)init;

@end

